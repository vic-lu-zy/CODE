Tutorial

0. What you need:

A. Matlab
B. Data signal, call this variable "LFP"
C. Observation times, call this variable "timestamp"
D. Sampling rate, call this variable "srate"

1. Determine the frequency band that you're interested in analyzing.  For example, 6 to 12 Hz for theta activity.

2.  Resample the LFP data.  Determine the new sampling rate by adding the two numbers that define the frequency boundary and then multiplying by two.  For theta, (6+12)*2 = 36 Hz.  Although 36 Hz is optimal, it may be OK to downsample the data to 40 Hz.

lfp2 = resample(lfp, 1, floor(srate/40));  
timestamp2 = linspace(timestamp(1), timestamp(end), numel(lfp2));

3.  Bandpass filter in the desired band.

lfp3 = filtfilt(fir1(100, [6 12]./40, 'bandpass'), 1, lfp2);

4. Apply the Kalman smoother to estimate the time-varying coefficients of the AR model.

[An, En] = dnf_arkal(lfp3, 40, 'sigma2v', 0.1, 'sigma2w', 0.07);
lfp3 is you data (inside the algorithm, lfp3 is normalized)
40 is the sampling rate
sigma2v is the expected noise variance, it has a range of [0 to 0.1]
sigma2w is the expected parameter variance, it has a range of [0 to 0.1]

5. Convert the AR coefficients into instantaneous frequency and FM estimates.

srate = 40;
poleinfo = dnf_arkal_coef2poleinfo(An);
iFreq = (srate).*abs(poleinfo.polephase(1,:))./(2*pi);
FM = [0; diff(iFreq(:)).*srate];

6. Examine the results.

clf;
subplot(3,1,1);
plot(timestamp2, lfp3, 'k');
subplot(3,1,2);
plot(timestamp2, iFreq, 'k');
subplot(3,1,3);
plot(timestamp2, FM, 'k');